{"version":3,"sources":["components/Sidebar/index.jsx","components/Card/index.jsx","api/utils.js","containers/Dashboard/components/IndonesiaMap/index.jsx","containers/Dashboard/index.jsx","containers/Analytics/index.jsx","containers/About/index.jsx","containers/NotFound/index.jsx","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","containers/Analytics/tim_realistic.pdf"],"names":["link","name","icon","component","this","props","id","children","className","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","mapKeysToOptions","obj","Object","keys","map","val","label","value","INDONESIA_COORDINATE","popScale","scaleLinear","domain","range","IndonesiaMap","data","ranking","average","useState","center","setCenter","zoom","setZoom","marker","selectMarker","showAlert","setShowAlert","useEffect","ProvinsiJson","province","coordinates","reverse","handleSelectGeography","e","newMarker","find","properties","NAME_1","isNullOrUndefined","handleShowAlert","markerOffset","setTimeout","Alert","variant","onClose","dismissible","Row","Col","lg","span","onClick","disabled","undefined","defaultStyle","x","y","style","spring","stiffness","damping","projection","projectionConfig","scale","disablePanning","geography","TopoJson","disableOptimization","geographies","key","CC_1","cacheId","data-for","data-tip","default","fill","entries","length","constructor","toUpperCase","stroke","strokeWidth","outline","hover","pressed","transform","strokeLinecap","strokeMiterlimit","strokeLinejoin","d","cx","cy","r","textAnchor","fontFamily","getContent","region","toFixed","toString","indexOf","Dashboard","searchFilter","setSearchFilter","currentData","setCurrentData","jenjang","tahun","jurusan","mataUjian","options","currentJenjang","currentTahun","currentJurusan","getOptions","Card","isDisabled","onChange","nextData","values","reduce","total","sort","a","b","pdfjs","GlobalWorkerOptions","workerSrc","version","Analytics","numPages","setNumPages","marginLeft","textAlign","overflowX","sm","file","PDF","onLoadSuccess","Array","from","el","index","pageNumber","About","NotFound","links","Sidebar","App","alt","src","to","activeClassName","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.4a62345b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nimport {\r\n    OverlayTrigger,\r\n    Tooltip,\r\n} from 'react-bootstrap'\r\n\r\n// SidebarButton object prototype\r\nclass ButtonPrototype {\r\n    constructor(link, name, icon, component) {\r\n        this.link = link;\r\n        this.name = name;\r\n        this.icon = icon;\r\n        this.component = component;\r\n    }\r\n}\r\n\r\n// Company logo\r\nconst Logo = props => {\r\n    return (\r\n        <div className=\"sidebar-logo\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Sidebar container component\r\nconst Container = props => {\r\n    return (\r\n        <div id=\"Sidebar\">\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Sidebar button component\r\nconst Button = props => {\r\n    return (\r\n        <li>\r\n            <OverlayTrigger\r\n                placement=\"right\"\r\n                delay={{\r\n                    show: 600,\r\n                    hide: 200\r\n                }}\r\n                overlay={\r\n                    <Tooltip>{props.overlay}</Tooltip>\r\n                }\r\n            >\r\n                <div className=\"sidebar-button\">{props.children}</div>\r\n            </OverlayTrigger>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default {\r\n    ButtonPrototype, \r\n    Container, \r\n    Logo,\r\n    Button\r\n}","import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\nconst Container = props => {\r\n    return (\r\n        <div className=\"card\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Title = props => {\r\n    return (\r\n        <h5>{props.children}</h5>\r\n    )\r\n}\r\n\r\nconst Content = props => {\r\n    return (\r\n        <span>{props.children}</span>\r\n    )\r\n}\r\n\r\n\r\nexport default {\r\n    Container,\r\n    Title,\r\n    Content\r\n}","export function getOptions(searchFilter, currentData) {\r\n  const { jenjang, tahun, jurusan } = searchFilter;\r\n\r\n  const options = {};\r\n  options.jenjang = mapKeysToOptions(currentData);\r\n\r\n  const currentJenjang = currentData && currentData[jenjang];\r\n  options.tahun = jenjang ? mapKeysToOptions(currentJenjang) : [];\r\n\r\n  const currentTahun = currentJenjang && currentJenjang[tahun];\r\n  options.jurusan = tahun ? mapKeysToOptions(currentTahun) : [];\r\n\r\n  const currentJurusan = currentTahun && currentTahun[jurusan];\r\n  options.mataUjian = jurusan ? mapKeysToOptions(currentJurusan) : [];\r\n  return options;\r\n}\r\n\r\nexport function mapKeysToOptions(obj) {\r\n  return Object.keys(obj).map(val => ({\r\n    label: val,\r\n    value: val\r\n  }));\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n    ComposableMap,\r\n    ZoomableGroup,\r\n    Geographies,\r\n    Geography,\r\n    Graticule,\r\n    Markers,\r\n    Marker\r\n} from \"react-simple-maps\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { Motion, spring } from \"react-motion\";\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Alert, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport TopoJson from \"./topo.json\";\r\nimport ProvinsiJson from \"./provinsi.json\"\r\n\r\nimport \"./style.scss\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nconst INDONESIA_COORDINATE = [118, -3];\r\nconst DEFAULT_ZOOM = 0.5;\r\nconst MARKER_OFFSET = -30;\r\nconst PROVINCE_ZOOM = 2;\r\n\r\nconst popScale = scaleLinear()\r\n    .domain([0, 50, 100])\r\n    .range([\"red\", \"yellow\", \"green\"]);\r\n\r\nconst IndonesiaMap = ({ data, ranking, average }) => {\r\n    const [center, setCenter] = useState(INDONESIA_COORDINATE);\r\n    const [zoom, setZoom] = useState(DEFAULT_ZOOM);\r\n    const [marker, selectMarker] = useState();\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        // componentDidUpdate\r\n    });\r\n\r\n    useEffect(() => {\r\n        // componentDidMount\r\n        ProvinsiJson.map(province => province.coordinates.reverse())\r\n\r\n        return () =>\r\n            // componentWillUnmount\r\n            ProvinsiJson.map(province => province.coordinates.reverse())\r\n    }, []);\r\n\r\n    const handleResetMap = () => {\r\n        setCenter(INDONESIA_COORDINATE);\r\n        setZoom(DEFAULT_ZOOM);\r\n        selectMarker(undefined);\r\n    };\r\n\r\n    const handleSelectGeography = e => {\r\n        const newMarker = ProvinsiJson.find(\r\n            province => province.name === e.properties.NAME_1\r\n        );\r\n\r\n        if (!isNullOrUndefined(newMarker)) {\r\n            newMarker.markerOffset = MARKER_OFFSET\r\n            newMarker.zoom = PROVINCE_ZOOM\r\n\r\n            setCenter(newMarker.coordinates);\r\n            setZoom(newMarker.zoom);\r\n            selectMarker(newMarker);\r\n        } else {\r\n            handleShowAlert();\r\n        }\r\n    };\r\n\r\n    const handleShowAlert = () => {\r\n        setShowAlert(true);\r\n\r\n        setTimeout(() => {\r\n            setShowAlert(false);\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"map-alert\">\r\n                <Alert\r\n                    show={showAlert}\r\n                    variant=\"warning\"\r\n                    onClose={() => setShowAlert(false)}\r\n                    dismissible\r\n                >\r\n                    Corresponding province data is unavailable.\r\n                </Alert>\r\n            </div>\r\n\r\n            <div className=\"map-option\">\r\n                <Row>\r\n                    <Col />\r\n                    <Col lg={1}>\r\n                        <Row>\r\n                            <Col lg={{ span: 9 }}>\r\n                                <Button\r\n                                    variant=\"light\"\r\n                                    onClick={() => setZoom(zoom * 2)}\r\n                                    disabled={zoom > 10}\r\n                                >\r\n                                    <i className=\"fas fa-search-plus\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={{ span: 9 }}>\r\n                                <Button\r\n                                    variant=\"light\"\r\n                                    onClick={() => setZoom(zoom / 2)}\r\n                                    disabled={zoom <= 0.5}\r\n                                >\r\n                                    <i className=\"fas fa-search-minus\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={{ span: 9 }}>\r\n                                <Button variant=\"light\" onClick={handleResetMap}>\r\n                                    <i className=\"fas fa-undo-alt\" />\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <Motion\r\n                defaultStyle={{\r\n                    zoom: DEFAULT_ZOOM,\r\n                    x: INDONESIA_COORDINATE[0],\r\n                    y: INDONESIA_COORDINATE[1],\r\n                }}\r\n                style={{\r\n                    zoom: spring(zoom, { stiffness: 50, damping: 15 }),\r\n                    x: spring(center[0], { stiffness: 50, damping: 15 }),\r\n                    y: spring(center[1], { stiffness: 50, damping: 15 })\r\n                }}\r\n            >\r\n                {({ zoom, x, y }) => (\r\n                    <ComposableMap\r\n                        projection={\"mercator\"}\r\n                        projectionConfig={{ scale: 2000 }}\r\n                    >\r\n                        <ZoomableGroup\r\n                            center={[x, y]}\r\n                            zoom={zoom}\r\n                            disablePanning\r\n                        >\r\n                            <Geographies\r\n                                geography={TopoJson}\r\n                                disableOptimization\r\n                            >\r\n                                {(geographies, projection) =>\r\n                                    geographies.map(geography => (\r\n                                        <Geography\r\n                                            key={`${geography.properties.CC_1}`}\r\n                                            cacheId={`${geography.properties.CC_1}`}\r\n                                            data-for=\"geography-info\"\r\n                                            data-tip={geography.properties.NAME_1}\r\n                                            geography={geography}\r\n                                            projection={projection}\r\n                                            onClick={handleSelectGeography}\r\n                                            style={{\r\n                                                default: {\r\n                                                    fill: Object.entries(data).length === 0 && data.constructor === Object\r\n                                                        ? \"#ECEFF1\"\r\n                                                        : popScale(data[geography.properties.NAME_1.toUpperCase()]),\r\n                                                    stroke: \"#607D8B\",\r\n                                                    strokeWidth: 0.75 * 1 / zoom,\r\n                                                    outline: \"none\"\r\n                                                },\r\n                                                hover: {\r\n                                                    fill: Object.entries(data).length === 0 && data.constructor === Object\r\n                                                        ? \"#CFD8DC\"\r\n                                                        : popScale(data[geography.properties.NAME_1.toUpperCase()]),\r\n                                                    stroke: Object.entries(data).length === 0 && data.constructor === Object\r\n                                                        ? \"#607D8B\"\r\n                                                        : \"#0e0e0e\",\r\n                                                    strokeWidth: Object.entries(data).length === 0 && data.constructor === Object\r\n                                                        ? 0.75 * 1 / zoom\r\n                                                        : 1 * 1 / zoom,\r\n                                                    outline: \"none\"\r\n                                                },\r\n                                                pressed: {\r\n                                                    fill: Object.entries(data).length === 0 && data.constructor === Object\r\n                                                        ? \"#FF5722\"\r\n                                                        : popScale(data[geography.properties.NAME_1.toUpperCase()]),\r\n                                                    stroke: \"#607D8B\",\r\n                                                    strokeWidth: 1 / zoom,\r\n                                                    outline: \"none\"\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    ))\r\n                                }\r\n                            </Geographies>\r\n\r\n                            <Graticule />\r\n\r\n                            {!isNullOrUndefined(marker) ? (\r\n                                <Markers>\r\n                                    <Marker\r\n                                        marker={marker}\r\n                                        style={{\r\n                                            default: { stroke: \"#455A64\" },\r\n                                            hover: { stroke: \"#FF5722\" },\r\n                                            pressed: { stroke: \"#FF5722\" }\r\n                                        }}\r\n                                    >\r\n                                        <g transform=\"translate(-12, -24)\">\r\n                                            <path\r\n                                                fill=\"none\"\r\n                                                strokeWidth=\"2\"\r\n                                                strokeLinecap=\"square\"\r\n                                                strokeMiterlimit=\"10\"\r\n                                                strokeLinejoin=\"miter\"\r\n                                                d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\r\n                                            />\r\n                                            <circle\r\n                                                fill=\"none\"\r\n                                                strokeWidth=\"2\"\r\n                                                strokeLinecap=\"square\"\r\n                                                strokeMiterlimit=\"10\"\r\n                                                strokeLinejoin=\"miter\"\r\n                                                cx=\"12\"\r\n                                                cy=\"9\"\r\n                                                r=\"3\"\r\n                                            />\r\n                                        </g>\r\n                                        <text\r\n                                            textAnchor=\"middle\"\r\n                                            y={marker.markerOffset}\r\n                                            style={{\r\n                                                fontFamily: \"Roboto, sans-serif\",\r\n                                                fill: \"#607D8B\",\r\n                                                stroke: \"none\"\r\n                                            }}\r\n                                        >\r\n                                            {marker.name}\r\n                                        </text>\r\n                                    </Marker>\r\n                                </Markers>\r\n                            ) : null}\r\n                        </ZoomableGroup>\r\n                    </ComposableMap>\r\n                )}\r\n            </Motion>\r\n\r\n            <ReactTooltip\r\n                id=\"geography-info\"\r\n                getContent={region => (\r\n                    <div className=\"map-tooltip\">\r\n                        <strong>{region}</strong>\r\n                        {\r\n                            isNullOrUndefined(region) ? null : (\r\n                                isNullOrUndefined(data[region.toUpperCase()]) ? null : (\r\n                                    <Fragment>\r\n                                        <br />\r\n                                        <span>\r\n                                            {\r\n                                                ((data[region.toUpperCase()] - average) / average) < 0\r\n                                                    ? (((data[region.toUpperCase()] - average) / average * 100).toFixed(2) * -1).toString() + '% di atas'\r\n                                                    : (((data[region.toUpperCase()] - average) / average * 100).toFixed(2)) + '% di bawah'\r\n                                            } rata-rata\r\n                                        </span> <br/>\r\n                                        <span>Peringkat: {ranking.indexOf(region.toUpperCase()) + 1}/{ranking.length}</span> <br />\r\n                                        <span>Skor: {data[region.toUpperCase()].toFixed(2)}/100</span>\r\n                                    </Fragment>\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                )}\r\n            />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default IndonesiaMap;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    Row,\r\n    Col,\r\n} from \"react-bootstrap\";\r\n\r\nimport { getOptions } from \"../../api/utils\";\r\nimport Map from \"./components/IndonesiaMap\";\r\nimport { Card } from \"../../components\";\r\n\r\nimport data from '../../api/data2.json'\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Dashboard = () => {\r\n    const [searchFilter, setSearchFilter] = useState({});\r\n    const [currentData, setCurrentData] = useState({});\r\n\r\n    const { jenjang, tahun, jurusan, mataUjian } = searchFilter;\r\n\r\n    const options = getOptions(searchFilter, data);\r\n\r\n    return (\r\n        <div id=\"Dashboard\">\r\n            <div className=\"filter-card\">\r\n                <Row>\r\n                    <Col />\r\n                    <Col lg={3}>\r\n                        <Row>\r\n                            <Col lg={{ span: 11 }}>\r\n                                <Card.Container>\r\n                                    <Card.Content>\r\n                                        <div className=\"filter-container\">\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <label>Jenjang</label>\r\n                                                    <Select\r\n                                                        isDisabled={!options.jenjang.length}\r\n                                                        value={{ label: jenjang, value: jenjang }}\r\n                                                        onChange={({ value }) => {\r\n                                                            setSearchFilter({\r\n                                                                jenjang: value\r\n                                                            });\r\n                                                            setCurrentData({});\r\n                                                        }}\r\n                                                        options={options.jenjang}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <label>Tahun</label>\r\n                                                    <Select\r\n                                                        isDisabled={!options.tahun.length}\r\n                                                        value={{ label: tahun, value: tahun }}\r\n                                                        onChange={({ value }) => {\r\n                                                            setSearchFilter({\r\n                                                                jenjang: searchFilter.jenjang,\r\n                                                                tahun: value\r\n                                                            });\r\n                                                            setCurrentData({});\r\n                                                        }}\r\n                                                        options={options.tahun}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <br />\r\n\r\n                                            <label>Jurusan</label>\r\n                                            <Select\r\n                                                isDisabled={!options.jurusan.length}\r\n                                                value={{ label: jurusan, value: jurusan }}\r\n                                                onChange={({ value }) => {\r\n                                                    setSearchFilter({\r\n                                                        jenjang: searchFilter.jenjang,\r\n                                                        tahun: searchFilter.tahun,\r\n                                                        jurusan: value\r\n                                                    });\r\n                                                }}\r\n                                                options={options.jurusan}\r\n                                            />\r\n\r\n                                            <br/>\r\n\r\n                                            <label>Mata Ujian</label>\r\n                                            <Select\r\n                                                isDisabled={!options.mataUjian.length}\r\n                                                value={{ label: mataUjian, value: mataUjian }}\r\n                                                onChange={({ value }) => {\r\n                                                    setSearchFilter({\r\n                                                        jenjang: searchFilter.jenjang,\r\n                                                        tahun: searchFilter.tahun,\r\n                                                        jurusan: searchFilter.jurusan,\r\n                                                        mataUjian: value\r\n                                                    });\r\n                                                    const {\r\n                                                        [jenjang]: {\r\n                                                            [tahun]: {\r\n                                                                [jurusan]: { [value]: nextData }\r\n                                                            }\r\n                                                        }\r\n                                                    } = data;\r\n                                                    setCurrentData(nextData);\r\n                                                }}\r\n                                                options={options.mataUjian}\r\n                                            />\r\n                                        </div>\r\n                                    </Card.Content>\r\n                                </Card.Container>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n            <div className=\"map-container\">\r\n                <Map \r\n                    data={currentData}\r\n                    average={\r\n                        Object.entries(data).length === 0 && data.constructor === Object\r\n                            ? null\r\n                            : (Object.values(currentData).reduce((total, value) => total + value, 0)) / Object.keys(currentData).length\r\n                    }\r\n                    ranking={\r\n                        Object.entries(data).length === 0 && data.constructor === Object\r\n                            ? null\r\n                            : Object.keys(currentData).sort((a, b) => currentData[b] - currentData[a])\r\n                    }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react'\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n} from 'react-bootstrap'\r\n\r\nimport PDF from './tim_realistic.pdf'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nconst Analytics = () => {\r\n    const [numPages, setNumPages] = useState(null)\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages( numPages )\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginLeft: '3em', textAlign: 'center',overflowX: 'hidden' }}>\r\n            <Row>\r\n                <Col sm={3}/>\r\n                <Col>\r\n                    <Row>\r\n                        <Col sm={1}/>\r\n                        <Col>\r\n                            <Document\r\n                                file={PDF}\r\n                                onLoadSuccess={onDocumentLoadSuccess}\r\n                            >\r\n                                {/* <Page pageNumber={pageNumber} /> */}\r\n                                {Array.from(\r\n                                    new Array(numPages),\r\n                                    (el, index) => (\r\n                                        <Page\r\n                                            key={`page_${index + 1}`}\r\n                                            pageNumber={index + 1}\r\n                                        />\r\n                                    ),\r\n                                )}\r\n                            </Document>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Analytics","import React, { Fragment } from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport { Sidebar } from './components'\r\nimport {\r\n  Dashboard,\r\n  Analytics,\r\n  About,\r\n  NotFound\r\n} from './containers'\r\n\r\nimport './App.scss';\r\n\r\n/**\r\n * List of sidebar buttons\r\n * Arguments: link, name, icon, component (in this order)\r\n**/\r\nconst links = [\r\n  new Sidebar.ButtonPrototype(\"dashboard\", \"Dashboard\", <i className=\"fas fa-globe-asia\" />, Dashboard),\r\n  new Sidebar.ButtonPrototype(\"analytics\", \"Analytics\", <i className=\"fas fa-chart-area\" />, Analytics),\r\n  new Sidebar.ButtonPrototype(\"about\", \"About\", <i className=\"fas fa-info-circle\" />, About),\r\n]\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Sidebar.Container>\r\n        <Sidebar.Logo>\r\n          <img alt=\"Logo\" src=\"https://hasilun.puspendik.kemdikbud.go.id/assets/images/logo_kemdikbud.png\"/>\r\n        </Sidebar.Logo>\r\n        {\r\n          links.map((link, index) => (\r\n            <Sidebar.Button key={index + 1} overlay={link.name}>\r\n              <NavLink to={`/` + link.link} activeClassName=\"active\">{link.icon}</NavLink>\r\n            </Sidebar.Button>\r\n          ))\r\n        }\r\n      </Sidebar.Container>\r\n\r\n      <div id=\"App\">\r\n        <Switch>\r\n          {\r\n            links.map((link, index) => (\r\n              <Route key={index + 1} path={'/' + link.link} exact component={link.component} />\r\n            ))\r\n          }\r\n\r\n          {/* Edge cases handling */}\r\n          <Route exact path='/' render={() => <Redirect to='/dashboard' />} />\r\n\r\n          <Route path='/404' exact component={NotFound} />\r\n          <Route render={() => <Redirect to='/404' />} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 46;","module.exports = __webpack_public_path__ + \"static/media/tim_realistic.9ed32cc7.pdf\";"],"sourceRoot":""}