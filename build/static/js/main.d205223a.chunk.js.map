{"version":3,"sources":["components/Sidebar/index.jsx","components/Card/index.jsx","api/utils.js","containers/Dashboard/components/IndonesiaMap/index.jsx","containers/Dashboard/index.jsx","containers/Analytics/index.jsx","containers/About/index.jsx","containers/NotFound/index.jsx","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","containers/Analytics/tim_realistic.pdf"],"names":["link","name","icon","component","this","props","id","children","className","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","mapKeysToOptions","obj","Object","keys","map","val","label","value","INDONESIA_COORDINATE","popScale","scaleLinear","domain","range","markers","markerOffset","coordinates","zoom","IndonesiaMap","data","console","log","useState","center","setCenter","setZoom","marker","selectMarker","showAlert","setShowAlert","useEffect","handleShowAlert","setTimeout","Alert","variant","onClose","dismissible","Row","Col","lg","span","onClick","disabled","undefined","style","spring","stiffness","damping","x","y","projection","projectionConfig","scale","onMoveStart","e","onMoveEnd","geography","TopoJson","geographies","i","key","data-for","data-tip","properties","NAME_1","selectedProvince","newMarker","find","province","isNullOrUndefined","handleSelectProvince","default","fill","toUpperCase","stroke","strokeWidth","outline","hover","pressed","transform","strokeLinecap","strokeMiterlimit","strokeLinejoin","d","cx","cy","r","textAnchor","fontFamily","getContent","region","BAHASA","IPS","Dashboard","searchFilter","setSearchFilter","currentData","setCurrentData","jenjang","tahun","jurusan","mataUjian","options","currentJenjang","currentTahun","currentJurusan","getOptions","Card","isDisabled","length","onChange","nextData","pdfjs","GlobalWorkerOptions","workerSrc","version","Analytics","numPages","setNumPages","marginLeft","textAlign","overflowX","sm","file","PDF","onLoadSuccess","Array","from","el","index","pageNumber","About","NotFound","links","Sidebar","App","alt","src","to","activeClassName","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.d205223a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './style.scss'\r\n\r\nimport {\r\n    OverlayTrigger,\r\n    Tooltip,\r\n} from 'react-bootstrap'\r\n\r\n// SidebarButton object prototype\r\nclass ButtonPrototype {\r\n    constructor(link, name, icon, component) {\r\n        this.link = link;\r\n        this.name = name;\r\n        this.icon = icon;\r\n        this.component = component;\r\n    }\r\n}\r\n\r\n// Company logo\r\nconst Logo = props => {\r\n    return (\r\n        <div className=\"sidebar-logo\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n// Sidebar container component\r\nconst Container = props => {\r\n    return (\r\n        <div id=\"Sidebar\">\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Sidebar button component\r\nconst Button = props => {\r\n    return (\r\n        <li>\r\n            <OverlayTrigger\r\n                placement=\"right\"\r\n                delay={{\r\n                    show: 600,\r\n                    hide: 200\r\n                }}\r\n                overlay={\r\n                    <Tooltip>{props.overlay}</Tooltip>\r\n                }\r\n            >\r\n                <div className=\"sidebar-button\">{props.children}</div>\r\n            </OverlayTrigger>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default {\r\n    ButtonPrototype, \r\n    Container, \r\n    Logo,\r\n    Button\r\n}","import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\nconst Container = props => {\r\n    return (\r\n        <div className=\"card\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Title = props => {\r\n    return (\r\n        <h5>{props.children}</h5>\r\n    )\r\n}\r\n\r\nconst Content = props => {\r\n    return (\r\n        <span>{props.children}</span>\r\n    )\r\n}\r\n\r\n\r\nexport default {\r\n    Container,\r\n    Title,\r\n    Content\r\n}","export function getOptions(searchFilter, currentData) {\r\n  const { jenjang, tahun, jurusan } = searchFilter;\r\n\r\n  const options = {};\r\n  options.jenjang = mapKeysToOptions(currentData);\r\n\r\n  const currentJenjang = currentData && currentData[jenjang];\r\n  options.tahun = jenjang ? mapKeysToOptions(currentJenjang) : [];\r\n\r\n  const currentTahun = currentJenjang && currentJenjang[tahun];\r\n  options.jurusan = tahun ? mapKeysToOptions(currentTahun) : [];\r\n\r\n  const currentJurusan = currentTahun && currentTahun[jurusan];\r\n  options.mataUjian = jurusan ? mapKeysToOptions(currentJurusan) : [];\r\n  return options;\r\n}\r\n\r\nexport function mapKeysToOptions(obj) {\r\n  return Object.keys(obj).map(val => ({\r\n    label: val,\r\n    value: val\r\n  }));\r\n}\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  ZoomableGroup,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  Markers,\r\n  Marker\r\n} from \"react-simple-maps\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport { Motion, spring } from \"react-motion\";\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Alert, Button, Row, Col } from \"react-bootstrap\";\r\n\r\nimport TopoJson from \"./topo.json\";\r\nimport \"./style.scss\";\r\nimport { isNullOrUndefined } from \"util\";\r\n\r\nconst INDONESIA_COORDINATE = [118, -3];\r\nconst DEFAULT_ZOOM = 0.5;\r\nconst MARKER_OFFSET = -30;\r\n\r\nconst popScale = scaleLinear()\r\n  .domain([0, 100])\r\n  .range([\"red\", \"yellow\", \"green\"]);\r\n\r\nconst markers = [\r\n  {\r\n    markerOffset: MARKER_OFFSET,\r\n    name: \"Jakarta Raya\",\r\n    coordinates: [106.8456, -6.2088],\r\n    zoom: 3\r\n  }\r\n];\r\n\r\nconst IndonesiaMap = ({ data }) => {\r\n  console.log(data);\r\n  const [center, setCenter] = useState(INDONESIA_COORDINATE);\r\n  const [zoom, setZoom] = useState(DEFAULT_ZOOM);\r\n  const [marker, selectMarker] = useState();\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // componentDidUpdate\r\n  });\r\n\r\n  useEffect(() => {\r\n    // componentDidMount\r\n\r\n    return () =>\r\n      // componentWillUnmount\r\n      null;\r\n  }, []);\r\n\r\n  const handleResetMap = () => {\r\n    setCenter(INDONESIA_COORDINATE);\r\n    setZoom(DEFAULT_ZOOM);\r\n    selectMarker(undefined);\r\n  };\r\n\r\n  const handleSelectProvince = selectedProvince => {\r\n    const newMarker = markers.find(\r\n      province => province.name === selectedProvince\r\n    );\r\n\r\n    if (!isNullOrUndefined(newMarker)) {\r\n      setCenter(newMarker.coordinates);\r\n      setZoom(newMarker.zoom);\r\n      selectMarker(newMarker);\r\n    } else {\r\n      handleShowAlert();\r\n    }\r\n  };\r\n\r\n  const handleShowAlert = () => {\r\n    setShowAlert(true);\r\n\r\n    setTimeout(() => {\r\n      setShowAlert(false);\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"map-alert\">\r\n        <Alert\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n          onClose={() => setShowAlert(false)}\r\n          dismissible\r\n        >\r\n          Corresponding province data is unavailable.\r\n        </Alert>\r\n      </div>\r\n      <div className=\"map-option\">\r\n        <Row>\r\n          <Col />\r\n          <Col lg={1}>\r\n            <Row>\r\n              <Col lg={{ span: 9 }}>\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={() => setZoom(zoom + 0.5)}\r\n                  disabled={zoom > 10}\r\n                >\r\n                  <i className=\"fas fa-search-plus\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={{ span: 9 }}>\r\n                <Button\r\n                  variant=\"light\"\r\n                  onClick={() => setZoom(zoom - 0.5)}\r\n                  disabled={zoom <= 0.5}\r\n                >\r\n                  <i className=\"fas fa-search-minus\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col lg={{ span: 9 }}>\r\n                <Button variant=\"light\" onClick={handleResetMap}>\r\n                  <i className=\"fas fa-undo-alt\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <Motion\r\n        style={{\r\n          zoom: spring(zoom, { stiffness: 50, damping: 15 }),\r\n          x: spring(center[0], { stiffness: 50, damping: 15 }),\r\n          y: spring(center[1], { stiffness: 50, damping: 15 })\r\n        }}\r\n      >\r\n        {({ zoom, x, y }) => (\r\n          <ComposableMap\r\n            projection={\"mercator\"}\r\n            projectionConfig={{\r\n              scale: 2000\r\n            }}\r\n          >\r\n            <ZoomableGroup\r\n              center={[x, y]}\r\n              zoom={zoom}\r\n              onMoveStart={e => ([x, y] = e)}\r\n              onMoveEnd={e => {\r\n                setCenter(e);\r\n              }}\r\n            >\r\n              <Geographies geography={TopoJson}>\r\n                {(geographies, projection) =>\r\n                  geographies.map((geography, i) => (\r\n                    <Geography\r\n                      key={i}\r\n                      data-for=\"geography-info\"\r\n                      data-tip={geography.properties.NAME_1}\r\n                      geography={geography}\r\n                      projection={projection}\r\n                      onClick={() =>\r\n                        handleSelectProvince(geography.properties.NAME_1)\r\n                      }\r\n                      style={{\r\n                        default: {\r\n                          fill: popScale(\r\n                            data[geography.properties.NAME_1.toUpperCase()]\r\n                          ),\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 0.75,\r\n                          outline: \"none\"\r\n                        },\r\n                        hover: {\r\n                          fill: \"#CFD8DC\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 1,\r\n                          outline: \"none\"\r\n                        },\r\n                        pressed: {\r\n                          fill: \"#FF5722\",\r\n                          stroke: \"#607D8B\",\r\n                          strokeWidth: 1,\r\n                          outline: \"none\"\r\n                        }\r\n                      }}\r\n                    />\r\n                  ))\r\n                }\r\n              </Geographies>\r\n              <Graticule />\r\n\r\n              {!isNullOrUndefined(marker) ? (\r\n                <Markers>\r\n                  <Marker\r\n                    marker={marker}\r\n                    style={{\r\n                      default: { stroke: \"#455A64\" },\r\n                      hover: { stroke: \"#FF5722\" },\r\n                      pressed: { stroke: \"#FF5722\" }\r\n                    }}\r\n                  >\r\n                    <g transform=\"translate(-12, -24)\">\r\n                      <path\r\n                        fill=\"none\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"square\"\r\n                        strokeMiterlimit=\"10\"\r\n                        strokeLinejoin=\"miter\"\r\n                        d=\"M20,9c0,4.9-8,13-8,13S4,13.9,4,9c0-5.1,4.1-8,8-8S20,3.9,20,9z\"\r\n                      />\r\n                      <circle\r\n                        fill=\"none\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"square\"\r\n                        strokeMiterlimit=\"10\"\r\n                        strokeLinejoin=\"miter\"\r\n                        cx=\"12\"\r\n                        cy=\"9\"\r\n                        r=\"3\"\r\n                      />\r\n                    </g>\r\n                    <text\r\n                      textAnchor=\"middle\"\r\n                      y={marker.markerOffset}\r\n                      style={{\r\n                        fontFamily: \"Roboto, sans-serif\",\r\n                        fill: \"#607D8B\",\r\n                        stroke: \"none\"\r\n                      }}\r\n                    >\r\n                      {marker.name}\r\n                    </text>\r\n                  </Marker>\r\n                </Markers>\r\n              ) : null}\r\n            </ZoomableGroup>\r\n          </ComposableMap>\r\n        )}\r\n      </Motion>\r\n\r\n      <ReactTooltip\r\n        id=\"geography-info\"\r\n        getContent={region => <div>{region}</div>}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IndonesiaMap;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Dropdown,\r\n  DropdownButton\r\n} from \"react-bootstrap\";\r\n\r\nimport { getOptions } from \"../../api/utils\";\r\nimport Map from \"./components/IndonesiaMap\";\r\nimport { Card } from \"../../components\";\r\n\r\nimport \"./style.scss\";\r\nimport DataJson from \"../../api/data2.json\";\r\n\r\nconst data = {\r\n  \"SMA MA\": {\r\n    \"2019\": {\r\n      BAHASA: {\r\n        \"BAHASA INDONESIA\": {\r\n          \"JAWA TENGAH\": 65,\r\n          \"JAWA BARAT\": 30\r\n        }\r\n      }\r\n    },\r\n    \"2018\": {\r\n      IPS: {\r\n        \"BAHASA INDONESIA\": {\r\n          \"JAWA BARAT\": 65\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [searchFilter, setSearchFilter] = useState({});\r\n  const [currentData, setCurrentData] = useState({});\r\n\r\n  const { jenjang, tahun, jurusan, mataUjian } = searchFilter;\r\n\r\n  const options = getOptions(searchFilter, data);\r\n\r\n  return (\r\n    <div id=\"Dashboard\">\r\n      <div className=\"filter-card\">\r\n        <Row>\r\n          <Col />\r\n          <Col lg={3}>\r\n            <Row>\r\n              <Col lg={{ span: 11 }}>\r\n                <Card.Container>\r\n                  <Card.Content>\r\n                    <div className=\"filter-container\">\r\n                      <Row>\r\n                        <Col>\r\n                          <h7>Jenjang</h7>\r\n                          <Select\r\n                            isDisabled={!options.jenjang.length}\r\n                            value={{ label: jenjang, value: jenjang }}\r\n                            onChange={({ value }) => {\r\n                              setSearchFilter({\r\n                                jenjang: value\r\n                              });\r\n                              setCurrentData({});\r\n                            }}\r\n                            options={options.jenjang}\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <h7>Tahun</h7>\r\n                          <Select\r\n                            isDisabled={!options.tahun.length}\r\n                            value={{ label: tahun, value: tahun }}\r\n                            onChange={({ value }) => {\r\n                              setSearchFilter({\r\n                                jenjang: searchFilter.jenjang,\r\n                                tahun: value\r\n                              });\r\n                              setCurrentData({});\r\n                            }}\r\n                            options={options.tahun}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <h7>Jurusan</h7>\r\n                      <Select\r\n                        isDisabled={!options.jurusan.length}\r\n                        value={{ label: jurusan, value: jurusan }}\r\n                        onChange={({ value }) => {\r\n                          setSearchFilter({\r\n                            jenjang: searchFilter.jenjang,\r\n                            tahun: searchFilter.tahun,\r\n                            jurusan: value\r\n                          });\r\n                        }}\r\n                        options={options.jurusan}\r\n                      />\r\n                      <h7>Mata Ujian</h7>\r\n                      <Select\r\n                        isDisabled={!options.mataUjian.length}\r\n                        value={{ label: mataUjian, value: mataUjian }}\r\n                        onChange={({ value }) => {\r\n                          setSearchFilter({\r\n                            jenjang: searchFilter.jenjang,\r\n                            tahun: searchFilter.tahun,\r\n                            jurusan: searchFilter.jurusan,\r\n                            mataUjian: value\r\n                          });\r\n                          const {\r\n                            [jenjang]: {\r\n                              [tahun]: {\r\n                                [jurusan]: { [value]: nextData }\r\n                              }\r\n                            }\r\n                          } = data;\r\n                          setCurrentData(nextData);\r\n                        }}\r\n                        options={options.mataUjian}\r\n                      />\r\n                    </div>\r\n                  </Card.Content>\r\n                </Card.Container>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <div className=\"map-container\">\r\n        <Map data={currentData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react'\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n} from 'react-bootstrap'\r\n\r\nimport PDF from './tim_realistic.pdf'\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n\r\nconst Analytics = () => {\r\n    const [numPages, setNumPages] = useState(null)\r\n    const [pageNumber, setPageNumber] = useState(1)\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setNumPages( numPages )\r\n    }\r\n\r\n    return (\r\n        <div style={{ marginLeft: '3em', textAlign: 'center',overflowX: 'hidden' }}>\r\n            <Row>\r\n                <Col sm={3}/>\r\n                <Col>\r\n                    <Row>\r\n                        <Col sm={1}/>\r\n                        <Col>\r\n                            <Document\r\n                                file={PDF}\r\n                                onLoadSuccess={onDocumentLoadSuccess}\r\n                            >\r\n                                {/* <Page pageNumber={pageNumber} /> */}\r\n                                {Array.from(\r\n                                    new Array(numPages),\r\n                                    (el, index) => (\r\n                                        <Page\r\n                                            key={`page_${index + 1}`}\r\n                                            pageNumber={index + 1}\r\n                                        />\r\n                                    ),\r\n                                )}\r\n                            </Document>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Analytics","import React, { Fragment } from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h1>404</h1>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react';\r\nimport { BrowserRouter as Router, Route, NavLink, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport { Sidebar } from './components'\r\nimport {\r\n  Dashboard,\r\n  Analytics,\r\n  About,\r\n  NotFound\r\n} from './containers'\r\n\r\nimport './App.scss';\r\n\r\n/**\r\n * List of sidebar buttons\r\n * Arguments: link, name, icon, component (in this order)\r\n**/\r\nconst links = [\r\n  new Sidebar.ButtonPrototype(\"dashboard\", \"Dashboard\", <i className=\"fas fa-globe-asia\" />, Dashboard),\r\n  new Sidebar.ButtonPrototype(\"analytics\", \"Analytics\", <i className=\"fas fa-chart-area\" />, Analytics),\r\n  new Sidebar.ButtonPrototype(\"about\", \"About\", <i className=\"fas fa-info-circle\" />, About),\r\n]\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Sidebar.Container>\r\n        <Sidebar.Logo>\r\n          <img alt=\"Logo\" src=\"https://hasilun.puspendik.kemdikbud.go.id/assets/images/logo_kemdikbud.png\"/>\r\n        </Sidebar.Logo>\r\n        {\r\n          links.map((link, index) => (\r\n            <Sidebar.Button key={index + 1} overlay={link.name}>\r\n              <NavLink to={`/` + link.link} activeClassName=\"active\">{link.icon}</NavLink>\r\n            </Sidebar.Button>\r\n          ))\r\n        }\r\n      </Sidebar.Container>\r\n\r\n      <div id=\"App\">\r\n        <Switch>\r\n          {\r\n            links.map((link, index) => (\r\n              <Route key={index + 1} path={'/' + link.link} exact component={link.component} />\r\n            ))\r\n          }\r\n\r\n          {/* Edge cases handling */}\r\n          <Route exact path='/' render={() => <Redirect to='/dashboard' />} />\r\n\r\n          <Route path='/404' exact component={NotFound} />\r\n          <Route render={() => <Redirect to='/404' />} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/tim_realistic.9ed32cc7.pdf\";"],"sourceRoot":""}